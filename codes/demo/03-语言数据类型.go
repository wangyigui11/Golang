// Go 语言按类别有以下几种数据类型：

// 布尔型： 布尔型的值可以是常量 true / false   例如 var areYouOK bool = true

// 数字类型: 整型 int和浮点型float32、 float64、Go语言支持整型和浮点型数字， 并且支持复数，其中位的运算采用补码

// 整型
// uint8  // 无符号8位整型(0-255)
// uint16 // 无符号16位整型(0-65535)
// unit32 // 无符号32位整型(0-4294967295)
// uint64 // 无符号64位整型(0-18446744073709551615)

// int8  // 有符号8为整型 (-128 - 127)
// int16 // 有符号16位整型 (-32768 - 32767)
// int32 // 有符号32位整型 (-2147483648 - 2147483647)
// int64 // 有符号64位整型 (-9223372036854775808 - 9223372036854775807)

// // 浮点型
// float32    // 32位浮点型数
// float64    // 64位浮点型数
// complex64  // 32位实数与虚数
// complex128 // 64位实数与虚数

// // 其他数字类型
// byte    // 类似unit8
// rune    // 类似于unit32
// uint    // 32或64位
// int     // 与uint一样
// uintptr // 无符号整型用于存放一个指针

// 字符串类型： 字符串就是一串固定长度的字符连接起来的字符序列。Go的字符串是由单个字节连接起来的。Go语言的字符串的字节使用UTF-8编码标识Unicode文本

// 派生类型：
// 指针类型(Pointer)
// 数组类型
// 结构化类型(struct)
// Channel类型
// 函数类型
// 切片类型
// 接口类型(interface)
// Map类型


